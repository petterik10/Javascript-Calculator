{"ast":null,"code":"import _slicedToArray from \"D:\\\\Javascript calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Javascript calculator\\\\src\\\\components\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\n\nfunction App() {\n  const numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\"];\n  const arithmeticOperations = [\"/\", \"*\", \"-\", \"=\", \"+\", \".\", \"AC\"];\n\n  const _useState = useState(\"0\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentCalculation = _useState2[0],\n        setCurrentCalculation = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        operator = _useState4[0],\n        setOperator = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        dotOperator = _useState6[0],\n        setDotOperator = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        nullOperator = _useState8[0],\n        setNullOperator = _useState8[1];\n\n  const handleClick = event => {\n    const innerText = event.target.innerText;\n\n    switch (innerText) {\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        if (currentCalculation === \"0\") {\n          setCurrentCalculation(innerText);\n        } else if (nullOperator) {\n          setCurrentCalculation(currentCalculation);\n        } else {\n          setCurrentCalculation(currentCalculation + innerText);\n        }\n\n        setOperator(false);\n        setDotOperator(false);\n        break;\n\n      case \"0\":\n        if (currentCalculation === \"0\") {\n          setCurrentCalculation(innerText);\n        } else if (!nullOperator && operator) {\n          setCurrentCalculation(currentCalculation + innerText);\n          setNullOperator(true);\n        } else if (nullOperator) {\n          setCurrentCalculation(currentCalculation);\n          setOperator(true);\n        } else {\n          setCurrentCalculation(currentCalculation + innerText);\n        }\n\n        setDotOperator(false);\n        break;\n\n      case \"AC\":\n        setCurrentCalculation(\"0\");\n        setOperator(false);\n        setDotOperator(false);\n        setNullOperator(false);\n        break;\n\n      case \".\":\n        if (!dotOperator) {\n          setCurrentCalculation(currentCalculation + innerText);\n          setDotOperator(true);\n        }\n\n        setOperator(true);\n        setNullOperator(false);\n        break;\n\n      case '/':\n      case '+':\n      case '-':\n      case '*':\n        if (!operator) {\n          setCurrentCalculation(currentCalculation + innerText);\n          setOperator(true);\n        }\n\n        setDotOperator(true);\n        setNullOperator(false);\n        break;\n\n      case \"=\":\n        setCurrentCalculation(eval(currentCalculation));\n        setDotOperator(false);\n        setOperator(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calculator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"display\",\n    className: \"display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, currentCalculation), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nums-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, numbers.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"\".concat(num == \"0\" && \"null\", \" \\n                 \"),\n      onClick: handleClick,\n      key: num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, num);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"op-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, arithmeticOperations.map((op, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"\".concat(op == \"=\" && \"hello\", \" \\n                   \").concat(op == \".\" && \"dot\", \"\\n                   \").concat(op == \"+\" && \"plus\", \"\\n                   \").concat(op == \"AC\" && \"ac\", \"\\n                   \").concat(op == \"/\" && \"divide\", \"\\n                   \").concat(op == \"*\" && \"multiply\", \"\\n                   \").concat(op == \"-\" && \"minus\", \"   \"),\n      onClick: handleClick,\n      key: op,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, op);\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Javascript calculator/src/components/App.jsx"],"names":["React","useState","Header","App","numbers","arithmeticOperations","currentCalculation","setCurrentCalculation","operator","setOperator","dotOperator","setDotOperator","nullOperator","setNullOperator","handleClick","event","innerText","target","eval","map","num","index","op"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\n\n\nfunction App() {\n\n  const numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\"];\n  const arithmeticOperations = [\"/\", \"*\", \"-\", \"=\", \"+\", \".\", \"AC\"];\n\n  const [currentCalculation, setCurrentCalculation] = useState(\"0\");\n  const [operator, setOperator] = useState(false);\n  const [dotOperator, setDotOperator] = useState(false);\n  const [nullOperator, setNullOperator] = useState(false);\n\n  const handleClick = (event) => {\n    const { innerText } = event.target;\n\n    switch (innerText) {\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n\n        if (currentCalculation === \"0\") {\n          setCurrentCalculation(innerText);\n        } else if (nullOperator) {\n          setCurrentCalculation(currentCalculation);\n        } else {\n          setCurrentCalculation(currentCalculation + innerText);\n        }\n        setOperator(false);\n        setDotOperator(false);\n        break;\n\n      case \"0\":\n        if (currentCalculation === \"0\") {\n          setCurrentCalculation(innerText);\n        } else if (!nullOperator && operator) {\n          setCurrentCalculation(currentCalculation + innerText);\n          setNullOperator(true);\n\n\n        } else if (nullOperator) {\n          setCurrentCalculation(currentCalculation);\n          setOperator(true);\n        } else {\n          setCurrentCalculation(currentCalculation + innerText);\n        }\n        setDotOperator(false);\n        break;\n\n      case \"AC\":\n        setCurrentCalculation(\"0\");\n        setOperator(false);\n        setDotOperator(false);\n        setNullOperator(false);\n        break;\n\n      case \".\":\n        if (!dotOperator) {\n          setCurrentCalculation(currentCalculation + innerText);\n          setDotOperator(true);\n        }\n        setOperator(true);\n        setNullOperator(false);\n        break;\n\n      case '/':\n      case '+':\n      case '-':\n      case '*':\n        if (!operator) {\n          setCurrentCalculation(currentCalculation + innerText);\n          setOperator(true);\n        }\n        setDotOperator(true);\n        setNullOperator(false);\n        break;\n\n      case \"=\":\n        setCurrentCalculation(eval(currentCalculation));\n        setDotOperator(false);\n        setOperator(false);\n    }\n  }\n\n  return (\n    <div>\n      <Header />\n      <div className=\"calculator\">\n        <div id=\"display\" className=\"display\">{currentCalculation}</div>\n        <div className=\"nums-container\">\n          {numbers.map((num, index) => {\n            return (\n\n              <button\n                className={\n                  `${num == \"0\" && \"null\"} \n                 `\n\n                }\n                onClick={handleClick} key={num}>{num}</button>\n            )\n          })}\n        </div>\n\n        <div className=\"op-container\">\n          {arithmeticOperations.map((op, index) => {\n            return (\n              <button\n                className={\n                  `${op == \"=\" && \"hello\"} \n                   ${op == \".\" && \"dot\"}\n                   ${op == \"+\" && \"plus\"}\n                   ${op == \"AC\" && \"ac\"}\n                   ${op == \"/\" && \"divide\"}\n                   ${op == \"*\" && \"multiply\"}\n                   ${op == \"-\" && \"minus\"}   `\n\n                }\n                onClick={handleClick} key={op}>{op}</button>\n            )\n          })}\n        </div>\n        {/* <button>7</button>\n        <button>8</button>\n        <button>9</button>\n        <button>%</button>\n\n        <button>4</button>\n        <button>5</button>\n        <button>6</button>\n        <button>X</button>\n\n        <button>1</button>\n        <button>2</button>\n        <button>3</button>\n        <button>--</button>\n\n        <button>0</button>\n        <button>..</button>\n        <button>+</button>\n        <button>=</button>\n\n        <button>AC</button> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}