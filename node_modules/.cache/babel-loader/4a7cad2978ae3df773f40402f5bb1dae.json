{"ast":null,"code":"import _slicedToArray from \"D:\\\\Javascript calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Javascript calculator\\\\src\\\\components\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\n\nfunction App() {\n  const numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\"];\n  const operators = [\"=\", \"+\", \"-\", \"/\", \"*\", \".\", \"AC\"];\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        lastPressed = _useState2[0],\n        setLastPressed = _useState2[1];\n\n  const _useState3 = useState(\"0\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentNumber = _useState4[0],\n        setCurrentNumber = _useState4[1];\n\n  const _useState5 = useState(undefined),\n        _useState6 = _slicedToArray(_useState5, 2),\n        prevNumber = _useState6[0],\n        setPrevNumber = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        operator = _useState8[0],\n        setOperator = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        secondOperator = _useState10[0],\n        setSecondOperator = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        nullOperator = _useState12[0],\n        setNullOperator = _useState12[1];\n\n  const handleClick = event => {\n    const innerText = event.target.innerText;\n    let hello;\n    /* if (!Number.isNaN(Number(innerText))) {\n      if (currentNumber === \"0\")\n        setCurrentNumber(innerText)\n    } else {\n      setCurrentNumber(currentNumber + innerText)\n    } */\n\n    switch (innerText) {\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        if (currentNumber === \"0\") {\n          setCurrentNumber(innerText);\n        } else {\n          setCurrentNumber(currentNumber + innerText);\n        }\n\n        setOperator(false);\n        break;\n\n      case \"0\":\n        if (currentNumber === \"0\") {\n          setCurrentNumber(innerText);\n        } else if (operator) {\n          /* if(currentNumber.includes(\"/\")) {\n            console.log(\"Hello\");\n            console.log(currentNumber.indexOf(\"/\") + 1)\n          } */\n          // if(!operator) {\n          // }\n\n          /* \n           */\n        } else if (!operator) {\n          setCurrentNumber(currentNumber + innerText);\n        }\n\n        break;\n\n      case \"AC\":\n        setCurrentNumber(\"0\");\n        setPrevNumber(undefined);\n        setOperator(false);\n        setSecondOperator(false);\n        break;\n\n      case \".\":\n        if (!secondOperator) {\n          setCurrentNumber(currentNumber + innerText);\n          setSecondOperator(true);\n        }\n\n        setOperator(true);\n        /*  if (!currentNumber.includes(\".\")) {\n           setCurrentNumber(currentNumber + innerText);\n         } */\n\n        break;\n\n      case '/':\n      case '+':\n      case '-':\n      case '*':\n        if (!operator) {\n          setCurrentNumber(currentNumber + innerText);\n          setOperator(true);\n        }\n\n        setSecondOperator(false); // setOperator(true)\n\n        break;\n\n      case \"=\":\n        console.log(currentNumber);\n        setCurrentNumber(eval(currentNumber)); //setOperator(false)\n\n        setSecondOperator(false);\n        setOperator(false);\n    }\n\n    setLastPressed(innerText);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calculator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"display\",\n    className: \"display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, currentNumber), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nums-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, numbers.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      key: num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, num);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"op-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, operators.map((op, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      key: op,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, op);\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Javascript calculator/src/components/App.jsx"],"names":["React","useState","Header","App","numbers","operators","undefined","lastPressed","setLastPressed","currentNumber","setCurrentNumber","prevNumber","setPrevNumber","operator","setOperator","secondOperator","setSecondOperator","nullOperator","setNullOperator","handleClick","event","innerText","target","hello","console","log","eval","map","num","index","op"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,SAASC,GAAT,GAAe;AAEb,QAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,CAAhB;AACA,QAAMC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,IAA/B,CAAlB;;AAHa,oBAKyBJ,QAAQ,CAACK,SAAD,CALjC;AAAA;AAAA,QAKNC,WALM;AAAA,QAKOC,cALP;;AAAA,qBAM6BP,QAAQ,CAAC,GAAD,CANrC;AAAA;AAAA,QAMNQ,aANM;AAAA,QAMSC,gBANT;;AAAA,qBAOuBT,QAAQ,CAACK,SAAD,CAP/B;AAAA;AAAA,QAONK,UAPM;AAAA,QAOMC,aAPN;;AAAA,qBAQmBX,QAAQ,CAAC,KAAD,CAR3B;AAAA;AAAA,QAQNY,QARM;AAAA,QAQIC,WARJ;;AAAA,qBAS+Bb,QAAQ,CAAC,KAAD,CATvC;AAAA;AAAA,QASNc,cATM;AAAA,QASUC,iBATV;;AAAA,sBAU2Bf,QAAQ,CAAC,KAAD,CAVnC;AAAA;AAAA,QAUNgB,YAVM;AAAA,QAUQC,eAVR;;AAYb,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA,UACrBC,SADqB,GACPD,KAAK,CAACE,MADC,CACrBD,SADqB;AAE7B,QAAIE,KAAJ;AAIA;;;;;;;AAOA,YAAQF,SAAR;AACE,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACE,YAAIZ,aAAa,KAAK,GAAtB,EAA2B;AACzBC,UAAAA,gBAAgB,CAACW,SAAD,CAAhB;AACD,SAFD,MAEO;AACLX,UAAAA,gBAAgB,CAACD,aAAa,GAAGY,SAAjB,CAAhB;AACD;;AACDP,QAAAA,WAAW,CAAC,KAAD,CAAX;AAEA;;AACF,WAAK,GAAL;AACE,YAAIL,aAAa,KAAK,GAAtB,EAA2B;AACzBC,UAAAA,gBAAgB,CAACW,SAAD,CAAhB;AACD,SAFD,MAEO,IAAIR,QAAJ,EAAe;AAEpB;;;;AAKA;AAEA;;AACD;;AAGA,SAbM,MAaA,IAAG,CAACA,QAAJ,EAAc;AACnBH,UAAAA,gBAAgB,CAACD,aAAa,GAAGY,SAAjB,CAAhB;AACD;;AAED;;AACF,WAAK,IAAL;AACEX,QAAAA,gBAAgB,CAAC,GAAD,CAAhB;AACAE,QAAAA,aAAa,CAACN,SAAD,CAAb;AACAQ,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA;;AAEF,WAAK,GAAL;AACE,YAAI,CAACD,cAAL,EAAqB;AACnBL,UAAAA,gBAAgB,CAACD,aAAa,GAAGY,SAAjB,CAAhB;AACAL,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AACDF,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;;;AAGC;;AAEF,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACE,YAAI,CAACD,QAAL,EAAe;AACbH,UAAAA,gBAAgB,CAACD,aAAa,GAAGY,SAAjB,CAAhB;AACAP,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACDE,QAAAA,iBAAiB,CAAC,KAAD,CAAjB,CALF,CAME;;AACA;;AACF,WAAK,GAAL;AACEQ,QAAAA,OAAO,CAACC,GAAR,CAAYhB,aAAZ;AACAC,QAAAA,gBAAgB,CAACgB,IAAI,CAACjB,aAAD,CAAL,CAAhB,CAFF,CAGE;;AACAO,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAF,QAAAA,WAAW,CAAC,KAAD,CAAX;AAzEJ;;AA4EAN,IAAAA,cAAc,CAACa,SAAD,CAAd;AACD,GA1FD;;AA4FA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,SAAS,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCZ,aAAvC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACuB,GAAR,CAAY,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3B,wBACE;AAAQ,MAAA,OAAO,EAAEV,WAAjB;AAA8B,MAAA,GAAG,EAAES,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCA,GAAzC,CADF;AAGD,GAJA,CADH,CAFF,eAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,SAAS,CAACsB,GAAV,CAAc,CAACG,EAAD,EAAKD,KAAL,KAAe;AAC5B,wBACE;AAAQ,MAAA,OAAO,EAAEV,WAAjB;AAA8B,MAAA,GAAG,EAAEW,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCA,EAAxC,CADF;AAGD,GAJA,CADH,CAVF,CAFF,CADF;AA4CD;;AAED,eAAe3B,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\n\n\nfunction App() {\n\n  const numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\"];\n  const operators = [\"=\", \"+\", \"-\", \"/\", \"*\", \".\", \"AC\"];\n\n  const [lastPressed, setLastPressed] = useState(undefined);\n  const [currentNumber, setCurrentNumber] = useState(\"0\");\n  const [prevNumber, setPrevNumber] = useState(undefined);\n  const [operator, setOperator] = useState(false);\n  const [secondOperator, setSecondOperator] = useState(false);\n  const [nullOperator, setNullOperator] = useState(false);\n\n  const handleClick = (event) => {\n    const { innerText } = event.target;\n    let hello;\n\n\n\n    /* if (!Number.isNaN(Number(innerText))) {\n      if (currentNumber === \"0\")\n        setCurrentNumber(innerText)\n    } else {\n      setCurrentNumber(currentNumber + innerText)\n    } */\n\n    switch (innerText) {\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        if (currentNumber === \"0\") {\n          setCurrentNumber(innerText);\n        } else {\n          setCurrentNumber(currentNumber + innerText);\n        }\n        setOperator(false);\n\n        break;\n      case \"0\":\n        if (currentNumber === \"0\") {\n          setCurrentNumber(innerText);\n        } else if (operator)  {\n           \n          /* if(currentNumber.includes(\"/\")) {\n            console.log(\"Hello\");\n            console.log(currentNumber.indexOf(\"/\") + 1)\n          } */\n  \n          // if(!operator) {\n          \n          // }\n         /* \n          */\n\n        } else if(!operator) {\n          setCurrentNumber(currentNumber + innerText);\n        } \n          \n        break;\n      case \"AC\":\n        setCurrentNumber(\"0\");\n        setPrevNumber(undefined);\n        setOperator(false);\n        setSecondOperator(false);\n        break;\n\n      case \".\":\n        if (!secondOperator) {\n          setCurrentNumber(currentNumber + innerText);\n          setSecondOperator(true);\n        } \n        setOperator(true);\n       /*  if (!currentNumber.includes(\".\")) {\n          setCurrentNumber(currentNumber + innerText);\n        } */\n        break;\n\n      case '/':\n      case '+':\n      case '-':\n      case '*':\n        if (!operator) {\n          setCurrentNumber(currentNumber + innerText);\n          setOperator(true);\n        }\n        setSecondOperator(false);\n        // setOperator(true)\n        break;\n      case \"=\":\n        console.log(currentNumber);\n        setCurrentNumber(eval(currentNumber));\n        //setOperator(false)\n        setSecondOperator(false);\n        setOperator(false);\n\n    }\n    setLastPressed(innerText);\n  }\n\n  return (\n    <div>\n      <Header />\n      <div className=\"calculator\">\n        <div id=\"display\" className=\"display\">{currentNumber}</div>\n        <div className=\"nums-container\">\n          {numbers.map((num, index) => {\n            return (\n              <button onClick={handleClick} key={num}>{num}</button>\n            )\n          })}\n        </div>\n\n        <div className=\"op-container\">\n          {operators.map((op, index) => {\n            return (\n              <button onClick={handleClick} key={op}>{op}</button>\n            )\n          })}\n        </div>\n        {/* <button>7</button>\n        <button>8</button>\n        <button>9</button>\n        <button>%</button>\n\n        <button>4</button>\n        <button>5</button>\n        <button>6</button>\n        <button>X</button>\n\n        <button>1</button>\n        <button>2</button>\n        <button>3</button>\n        <button>--</button>\n\n        <button>0</button>\n        <button>..</button>\n        <button>+</button>\n        <button>=</button>\n\n        <button>AC</button> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}